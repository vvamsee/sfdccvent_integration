<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<beans:bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		p:location="/WEB-INF/properties/config.properties" />
	<!-- <context:property-placeholder location="classpath:config.properties"/> -->
	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->
	<context:component-scan base-package="com.appshark.controllers" />

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Enable Annotation based configuration -->
	<context:annotation-config />

	<mvc:default-servlet-handler/>
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/WEB-INF/" cache-period="0"/>
	
	

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/pages directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/pages/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

 <beans:bean id="multipartResolver" class="org.gmr.web.multipart.GMultipartResolver">
    <beans:property name="maxUploadSize" value="10000000" />
</beans:bean> 
	

	 <beans:bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <beans:property name="messageConverters">
            <beans:list>
                <beans:bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
              </beans:list>
        </beans:property>
    </beans:bean>
    
	 <beans:bean  id="contentNegotiatingResolver"
        class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">  
        <beans:property name="order" value="1" />  
        <beans:property name="mediaTypes">  
            <beans:map>  
                <beans:entry key="json" value="application/json" />  
            </beans:map>  
        </beans:property>  
  
        <beans:property name="defaultViews">  
            <beans:list>  
                <!-- JSON View -->  
                <beans:bean  
                    class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">  
                </beans:bean>  
            </beans:list>  
        </beans:property>  
        <beans:property name="ignoreAcceptHeader" value="true" />  
    </beans:bean>  
    <beans:bean id="configProperties" class="com.appshark.beans.ConfigProperties" >
		<beans:property name="userName" value="${userName}" />
		<beans:property name="password" value="${password}" />
		<beans:property name="clientId" value="${clientId}" />
		<beans:property name="clientSecret" value="${clientSecret}" />
		<beans:property name="logInUrl" value="${logInUrl}" />
		<beans:property name="endPoint1" value="${endPoint1}" />
		<beans:property name="endPoint2" value="${endPoint2}" />
	</beans:bean>
	
    <!-- <beans:bean id="cloudStorageService" class="com.appshark.utils.CloudStorageService" autowire="byName">
    </beans:bean> -->
    
	<!-- 
     <beans:bean id="configProperties" class="com.appshark.utils.CloudStorageService" >
         <beans:property name="configProperties"  value="configPropertiesObj"/>
    </beans:bean>
      -->
     
</beans:beans>